# Introduction

::: callout-note
You need a basic degree of familiarity with the R language. @sec-R gives a brief introduction.
:::

Single case research has become an important and broadly accepted method for gaining insight into educational processes. Especially the field of special education has adopted single-case research as a proper method for evaluating the effectiveness of an intervention or the developmental processes underlying problems in acquiring academic skills. Single-case studies are also popular among teachers and educators who are interested in evaluating the learning progress of their students. The resulting information of a single-case research design provide helpful information for pedagogical decision processes regarding further teaching processes of an individual student but also help to decide, whether or how to implement certain teaching methods into a classroom.\
Despite its usefulness, standards on how to conduct single-case studies, how to analyze the data, and how to present the results is less well developed compared to group based research designs. Moreover, while there is ample software helping to analyse data, most of the software is designed towards analyzing group based data sets. Visualizing single-case data sets oftentimes means to tinker with spreadsheet programs and analyzing becomes a cumbersome endeavor. This book addresses this gap. It has been written around a specialized software tool for managing, visualizing, and analyzing single-case data. This tool is an extension package for the software `R` [@R-base] named `scan`, an acronym for **single-case analyses**.

## A teaser

Before going into the details of how `scan` works, I would like to give you an example of what you can do with `scan`. It is meant as a teaser to get you motivated to tackle the steep learning curve associated with using `R` (but there is a land of milk and honey behind that curve!). So, do not worry if you do not understand every detail of this example, it will all be explained and obvious to you once you become familiar with `scan`.

Let us set a fictional context. Suppose you are researching a method to improve the arithmetic skills of struggling fourth-grade students. You have developed an intervention programme called KUNO. In a pilot study, you want to get some evidence about the effectiveness of this new method, and you set up a multi-baseline single-case study with three students participating in the KUNO programme over a period of ten weeks. Throughout the course, you regularly measured each student's numeracy skills 20 times using a reliable test. You also carried out a follow-up after eight weeks with five additional measures. I am now going to make up some data for this fictitious KUNO study, because it would be too difficult to carry out a real study and actually develop a real intervention method.

\
We use the `scan` package to code the data. Each case has 25 measurements. We have three phases: before the intervention (A), during the intervention (B), and a follow-up (C). Phases A and B are of different lengths. The cases are named and combined into a single object called `strange_study`.

```{r build-strange-study}
case1 <- scdf(
  c(A = 3, 2, 4, 6, 4, 3, 
    B = 6, 5, 4, 6, 7, 5, 6, 8, 6, 7, 8, 9, 7, 8, 
    C = 6, 6, 8, 5, 7), 
  name = "Dustin"
)
case2 <- scdf(
  c(A = 0, 1, 3, 1, 4, 2, 1, 
    B = 2, 1, 4, 3, 5, 5, 7, 6, 3, 8, 6, 4, 7, 
    C = 6, 5, 6, 8, 6), 
  name = "Mike"
)
case3 <- scdf(
  c(A = 7, 5, 6, 4, 4, 7, 5, 7, 4,
    B = 8, 9, 11, 13, 12, 15, 16, 13, 17, 16, 18,
    C = 17, 20, 22, 18, 20), 
  name = "Will"
)
strange_study <- c(case1, case2, case3)
```

Now we visualize the cases:

```{r plot-strange-study, fig.width=5}
plot(
  strange_study,
  ylab = "Correct",
  xlab = "Days",
  lines = c("loreg", col = "red"),
  phase.names = c("Baseline", "Intervention", "Follow-up"),
  style = "chart",
  ylim = c(0, 30),
  xinc = 2
)
```

Now we need some descriptive statistics:

```{r describe-strange-study-print, eval=FALSE}
describe(strange_study)
```

```{r describe-strange-study, echo=FALSE, message=FALSE, warning=FALSE}
res <- describe(strange_study)
export(res, flip = TRUE)
```

Single-case data are oftentimes analyzed with overlap indices. Let us get an overview comparing phases A and B:

```{r overlapAB-strange-study-print, eval=FALSE}
overlap(strange_study)
```

```{r overlapAB-strange-study, echo=FALSE, message=FALSE, warning=FALSE}
res <- overlap(strange_study)
export(res, flip = TRUE)
```

How do the changes hold up against the follow-up? Let us compare phases A and C:

```{r overlapAC-strange-study-print, eval=FALSE}
overlap(strange_study, phases = c("A", "C"))
```

```{r overlapAC-strange-study, echo=FALSE, message=FALSE, warning=FALSE}
res <- overlap(strange_study, phases = c("A", "C"))
export(res, flip = TRUE)
```

Finally, we conduct regression analyses for each cases with a piecewise regression model:

```{r plm-strange-study-print, eval=FALSE}
plm(strange_study$Dustin)
plm(strange_study$Mike)
plm(strange_study$Will)
```

```{r plm-strange-study, echo=FALSE, message=FALSE, warning=FALSE}
res <- plm(strange_study$Dustin)
export(res)

res <- plm(strange_study$Mike)
export(res)

res <- plm(strange_study$Will)
export(res)
```
